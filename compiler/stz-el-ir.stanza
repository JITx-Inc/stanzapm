defpackage stz/el-ir :
  import core
  import collections

;============================================================
;========================= Types ============================
;============================================================

deftype EType
defstruct EByte <: EType
defstruct EInt <: EType
defstruct ELong <: EType
defstruct EFloat <: EType
defstruct EDouble <: EType
defstruct EOf <: EType: (n:Int)

;============================================================
;======================= Wrapper ============================
;============================================================

defstruct EPackage :  
  exps: Tuple<ETExp>

;============================================================
;================== Top-Level Expressions ===================
;============================================================

deftype ETExp
defstruct EDefn <: ETExp :
  targs: Tuple<Int>
  args: Tuple<Int>
  a2: EType
  defs: Tuple<EDef>
  ins: Tuple<EIns>

defstruct EDefType <: ETExp :
  n: Int
  parent: False|EType

defstruct EDef :
  n: Int
  type: EType
  mutable?: True|False

;============================================================
;======================== Functions =========================
;============================================================

defstruct EFn :
  targs: Tuple<Int>
  args: Tuple<EDef>
  defs: Tuple<EDef>
  a2: EType
  ins: Tuple<EIns>

;============================================================  
;======================= Instructions =======================
;============================================================  

deftype EImm
defstruct EConst <: EImm :
  value
defstruct EVar <: EImm :
  n: Int

deftype EIns
defstruct ESet <: EIns :
  x: EVar
  y: EImm
defstruct EParallelSet <: EIns :
  xs: Tuple<EVar>
  ys: Tuple<EImm>
defstruct ELabel <: EIns :
  n: Int
defstruct EDo <: EIns :
  x: EVar
  f: EImm
  ys: Tuple<EImm>
  type: EType
defstruct EReturn <: EIns :
  y: EImm