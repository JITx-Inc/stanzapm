defpackage stz/vm-driver :
  import core
  import collections
  import stz/vm-ir
  import stz/vm
  import stz/vm-analyze

defn main () :
  val filename = command-line-arguments()[1]
  val prog = read-vm-prog(filename)
  
  println("===== Input Program =====")
  println(prog)

  println("===== Analyze Program =====")
  val prog* = analyze(prog)

  println("===== Analyzed Program ====")
  println(prog*)

  val trace? = contains?(command-line-arguments(), "-trace")
  val analyze? = contains?(command-line-arguments(), "-analyze")

  if analyze? :
    println("===== Analyzed Interpretation =====")
    interpret(prog*, trace?)
  else :
    println("===== Normal Interpretation =====")
    interpret(prog, trace?)

main()