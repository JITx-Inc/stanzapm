;See License.txt for details about licensing

defpackage stz/pkg :
  import core
  import collections
   ;import stz/serializer

;============================================================
;=============== Variable Length Integer ====================
;============================================================

;Variable-Length Integer
;  0 <= x < 250 :             [x]
;  250 <= x < 506 :           [250 | x - 250]
;  506 <= x < 762 :           [251 | x - 506]
;  762 <= x < 1018 :          [252 | x - 762]
;  â€“32768 <= x < 32768 :      [253 | b1 , b0]
;  -8388608 <= x < 8388608 :  [254 | b2 , b1 , b0]
;  otherwise :                [255 | b3 , b2 , b1, b0]

defn to-var-int (x:Int, Y: Byte -> False) :
  defn B0 (x:Int) : Y(to-byte(x))
  defn B1 (x:Int) : Y(to-byte(x >> 8))
  defn B2 (x:Int) : Y(to-byte(x >> 16))
  defn B3 (x:Int) : Y(to-byte(x >> 24))    
  if x >= 0 :
    if x < 250 : B0(x)
    else if x < 506 : (Y(250Y), B0(x - 250))
    else if x < 762 : (Y(251Y), B0(x - 506))
    else if x < 1018 : (Y(252Y), B0(x - 762))
    else if x < 32768 : (Y(253Y), B1(x), B0(x))
    else if x < 8388608 : (Y(254Y), B2(x), B1(x), B0(x))
    else : (Y(255Y), B3(x), B2(x), B1(x), B0(x))
  else :
    if x >= -32768 : (Y(253Y), B1(x), B0(x))
    else if x >= -8388608 : (Y(254Y), B2(x), B1(x), B0(x))
    else : (Y(255Y), B3(x), B2(x), B1(x), B0(x))

defn from-var-int (N: () -> Byte) -> Int :
  defn B0 () : to-int(N())
  defn B1 () : B0() << 8
  defn B2 () : B0() << 16
  defn S1 () : (B0() << 24) >>> 16
  defn S2 () : (B0() << 24) >>> 8
  defn S3 () : (B0() << 24)
  
  val x = N()
  switch(x) :
    255Y : S3() | B2() | B1() | B0()
    254Y : S2() | B1() | B0()
    253Y : S1() | B0()
    252Y : B0() + 762
    251Y : B0() + 506
    250Y : B0() + 250
    else : to-int(x)

;============================================================
;============================================================
;============================================================


;#use-added-syntax(stz-serializer-lang)

;============================================================
;===================== Serialization ========================
;============================================================

;defserializer (out:FileOutputStream, in:FileInputStream) :
  