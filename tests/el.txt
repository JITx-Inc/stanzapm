load :
  package A :
    export 1 fn(F(A, myf, []) -> int)
  package A :
    def V0 : int
    defn V1 fn<> () -> int :
      V0 = 42
      dump (V0)
      return 0
    init :
      V1()

  package B :
    import 3 fn(F(A, myf, []) -> int)
    export 1 fn(F(B, myf, []) -> int)
  package B :
    defn V1 fn<> () -> int :
      V3()
      return 0

load :
  package D :
    import 1 fn(F(B, myf, []) -> int)
  package D :
    init :
      V1()

load :
  package A :
    export 1 fn(F(A, myf, []) -> int)
  package A :
    def V0 : int
    defn V1 fn<> () -> int :
      V0 = 13
      dump (V0)
      return 0
    init :
      V1()

load :
  package D :
    import 1 fn(F(B, myf, []) -> int)
  package D :
    init :
      V1()
