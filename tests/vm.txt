;============================================================
;===================== Test 0 ===============================
;============================================================
;class 0 ()
;
;func 0 () :
;  local-size = 8
;  reserve 1, 8
;  R0 = alloc<0> 8
;  R0[0] = int 0
;  R0[4] = int 1
;  label 0
;    R1 = int R0[4]
;    goto 1 when int gt R1 10
;    R2 = R0
;    R0 = int R2[0]
;    R1 = int R2[4]
;    local[0] = ref R2
;    call 1
;    R2 = ref local[0]
;    R2[0] = int R0
;    R2[4] = int R1
;    R0 = R2
;  goto 0
;  label 1
;  R1 = int R0[0]
;  R2 = int R0[4]
;  return
;
;func 1 (int int) :
;  local-size = 0
;  R0 = int add R0 R1
;  R1 = int add R1 1
;  return 


;============================================================
;====================== Test 1 ==============================
;============================================================
;
;class 0 ()
;class 1 ()
;class 2 (0, 1)
;class 3 (1)
;class 4 (3)
;
;func 0 () :
;  local-size = 0
;  reserve 1, 8
;  R0 = alloc<4> 8
;  R1 = instanceof<0> R0
;  R2 = instanceof<1> R0
;  R3 = instanceof<2> R0
;  R4 = instanceof<3> R0
;  R5 = instanceof<4> R0
;  return


;============================================================
;====================== Test 2 ==============================
;============================================================

class 0 ()

func 0 () :
  local-size = 0
  reserve 1, 24
  R0 = alloc<0> 24
  R0[0] = int 1
  R0[8] = int codeof(1)
  R0[16] = int 42
  R1 = 40
  call-closure R0
  return
  
func 1 (ref int) :
  local-size = 0
  R2 = int R0[16]
  R0 = int add R1 R2
  return
