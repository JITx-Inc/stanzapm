;============================================================
;===================== Test 0 ===============================
;============================================================
;func 0 () :
;  num-regs = 3
;  reserve 16
;  R0 = alloc<0> 8
;  R0[0] = int 0
;  R0[4] = int 1
;  label 0
;    R1 = int R0[4]
;    goto 1 when int gt R1 10
;    R1 = int R0[0]
;    R2 = int R0[4]
;    R1 = call 1
;    R0[0] = int R1
;    R0[4] = int R2
;  goto 0
;  label 1
;  R1 = int R0[0]
;  R2 = int R0[4]
;  return
;
;func 1 (int int) :
;  num-regs = 2
;  R0 = int add R0 R1
;  R1 = int add R1 1
;  return 


;============================================================
;====================== Test 1 ==============================
;============================================================

class 0 ()
class 1 ()
class 2 (0, 1)
class 3 (1)
class 4 (3)

func 0 () :
  num-regs = 6
  reserve 16
  R0 = alloc<4> 8
  R1 = instanceof<0> R0
  R2 = instanceof<1> R0
  R3 = instanceof<2> R0
  R4 = instanceof<3> R0
  R5 = instanceof<4> R0
  return
