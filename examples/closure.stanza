defpackage closure :
  import core
  import collections
  import stz/algorithms

defn main () :
  defn E (k:String, vs:Tuple<String>) : k => to-list(vs)
  val closure = strong-components $ [
    E("A", ["B" "C" "F"])
    E("B", ["D"])
    E("D", ["C", "F"])
    E("C", ["B"])
    E("F", ["H"])
    E("H", ["I", "E"])
    E("I", ["G"])
    E("G", ["F"])
    E("E", [])]
  do(println, closure)

main()
